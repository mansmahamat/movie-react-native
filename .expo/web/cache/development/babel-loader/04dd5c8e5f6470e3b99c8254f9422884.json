{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/mansour/Desktop/React_Native_Local_Storage_YT/src/screens/SerieDetail.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TrailersItems from \"../components/TrailersItems\";\nimport Constants from \"expo-constants\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport YoutubePlayer from \"react-native-youtube-iframe\";\nimport axios from 'axios';\nimport GenresGroup from \"../components/GenresGroup\";\nimport Actor from \"../components/Actor\";\nvar deviceWidth = Dimensions.get(\"window\").width;\nvar leftDevice = deviceWidth - 344;\nexport default function SerieDetail(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      details = _useState2[0],\n      setDetails = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      actor = _useState4[0],\n      setActor = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modalVisible = _useState6[0],\n      setModalVisible = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      trailers = _useState8[0],\n      setTrailers = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      activeMovieTrailerKey = _useState10[0],\n      setActiveMovieTrailerKey = _useState10[1];\n\n  var serie = props.route.params.serie;\n  useEffect(function () {\n    axios.get(\"https://api.themoviedb.org/3/tv/\" + serie.id + \"/videos?api_key=afd804ef50f1e6b1ad6f29209e9395e6&language=fr-FR\").then(function (response) {\n      setTrailers(response.data.results);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get(\"https://api.themoviedb.org/3/tv/\" + serie.id + \"?api_key=afd804ef50f1e6b1ad6f29209e9395e6&language=fr-FR\").then(function (response) {\n      setDetails(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get(\"https://api.themoviedb.org/3/tv/\" + serie.id + \"/credits?api_key=afd804ef50f1e6b1ad6f29209e9395e6&language=fr-FR\").then(function (response) {\n      setActor(response.data.cast);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, React.createElement(Modal, {\n    style: {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\"\n    },\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      setModalVisible(!modalVisible);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      height: \"100%\",\n      justifyContent: \"center\",\n      backgroundColor: \"#000\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: \"white\",\n      width: 48,\n      height: 48,\n      position: \"absolute\",\n      top: Constants.statusBarHeight + 10,\n      left: 20,\n      borderRadius: 10,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return setModalVisible(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"close\",\n    size: 42,\n    color: \"black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }))), React.createElement(View, {\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, React.createElement(YoutubePlayer, {\n    height: 300,\n    play: true,\n    videoId: activeMovieTrailerKey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  })))), React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    onPress: function onPress() {\n      return props.navigation.pop();\n    },\n    style: {\n      position: \"absolute\",\n      top: Constants.statusBarHeight + 10,\n      left: 10,\n      zIndex: 1,\n      paddingRight: 20,\n      paddingBottom: 20\n    },\n    name: \"chevron-left\",\n    color: \"#fff\",\n    size: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  })), React.createElement(Image, {\n    resizeMode: \"cover\",\n    style: styles.cover_image,\n    source: {\n      uri: \"https://image.tmdb.org/t/p/w500\" + serie.backdrop_path\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.square,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    resizeMode: \"cover\",\n    style: styles.poster,\n    source: {\n      uri: \"https://image.tmdb.org/t/p/w500\" + serie.poster_path\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: \"pink\",\n      padding: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: \"row\",\n      justifyContent: \"flex-end\",\n      alignItems: \"flex-end\",\n      marginBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      flexWrap: \"wrap\",\n      flexDirection: \"column\",\n      alignItems: \"flex-end\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 18\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, \" Moyenne des notes : \"), React.createElement(Text, {\n    style: serie.vote_average > 5 ? {\n      color: \"green\",\n      fontSize: 26,\n      fontWeight: \"bold\"\n    } : {\n      color: \"red\",\n      fontSize: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 15\n    }\n  }, serie.vote_average))), React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  }, serie.name), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 11\n    }\n  }, \"Nombre de saisons : \", details.number_of_seasons), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, \"Nombre apisodes : \", details.number_of_episodes), React.createElement(View, {\n    style: {\n      flexWrap: \"wrap\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 11\n    }\n  }, details.genres && React.createElement(GenresGroup, {\n    data: details.genres,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 31\n    }\n  })), React.createElement(Text, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 11\n    }\n  }, \"R\\xE9sum\\xE9\"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }, \" \", serie.overview, \" \"), React.createElement(Text, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }\n  }, \"Trailers\"), React.createElement(View, {\n    style: {\n      flexWrap: \"wrap\",\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, trailers.map(function (item, index) {\n    return index < 2 ? React.createElement(TrailersItems, {\n      image: serie.backdrop_path,\n      key: item.key,\n      item: item,\n      setModalVisible: setModalVisible,\n      setActiveMovieTrailerKey: setActiveMovieTrailerKey,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }\n    }) : React.createElement(View, {\n      key: item.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 20\n      }\n    });\n  })), React.createElement(Text, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }, \"Acteur\"), React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }\n  }, React.createElement(ScrollView, {\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }, actor.map(function (item, index) {\n    return index < 12 ? React.createElement(Actor, {\n      key: index,\n      actor: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 15\n      }\n    }) : React.createElement(View, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 18\n      }\n    });\n  }))), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 11\n    }\n  }, \" Crere par  \"))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: Constants.statusBarHeight\n  },\n  cover_image: {\n    height: 285\n  },\n  header: {\n    fontSize: 20,\n    fontWeight: \"700\"\n  },\n  title: {\n    fontSize: 22,\n    fontWeight: \"bold\",\n    alignItems: \"center\"\n  },\n  square: {\n    width: 100,\n    height: 150,\n    backgroundColor: \"red\",\n    zIndex: 1,\n    position: \"absolute\",\n    top: 220,\n    left: 10,\n    borderRadius: 20\n  },\n  squareo: {\n    width: 48,\n    height: 48,\n    backgroundColor: \"white\",\n    borderRadius: 24,\n    justifyContent: \"center\",\n    marginTop: 20,\n    alignItems: \"center\"\n  },\n  poster: {\n    height: \"100%\",\n    width: \"100%\",\n    borderRadius: 20\n  }\n});","map":{"version":3,"sources":["/Users/mansour/Desktop/React_Native_Local_Storage_YT/src/screens/SerieDetail.js"],"names":["React","useState","useEffect","TrailersItems","Constants","MaterialCommunityIcons","YoutubePlayer","axios","GenresGroup","Actor","deviceWidth","Dimensions","get","width","leftDevice","SerieDetail","props","details","setDetails","actor","setActor","modalVisible","setModalVisible","trailers","setTrailers","activeMovieTrailerKey","setActiveMovieTrailerKey","serie","route","params","id","then","response","data","results","catch","error","console","log","cast","styles","container","position","top","left","height","flex","justifyContent","backgroundColor","statusBarHeight","borderRadius","alignItems","navigation","pop","zIndex","paddingRight","paddingBottom","cover_image","uri","backdrop_path","square","poster","poster_path","padding","flexDirection","marginBottom","flexWrap","fontSize","vote_average","color","fontWeight","title","name","number_of_seasons","number_of_episodes","genres","header","overview","map","item","index","key","StyleSheet","create","marginTop","squareo"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { Image,\n  Modal,\n  ScrollView,\n  StyleSheet,\n  Text,\n  Dimensions,\n  TouchableWithoutFeedback,\n  View, } from \"react-native\";\nimport TrailersItems from \"../components/TrailersItems\";\nimport Constants from \"expo-constants\";\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\nimport YoutubePlayer from \"react-native-youtube-iframe\";\nimport axios from 'axios'\nimport GenresGroup from '../components/GenresGroup'\nimport Actor from '../components/Actor'\n\n\nconst deviceWidth = Dimensions.get(\"window\").width;\nconst leftDevice = (deviceWidth- 344);\n\nexport default function SerieDetail(props) {\n  const [details, setDetails] = useState([]);\n  const [actor, setActor] = useState([]);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [trailers, setTrailers] = useState([]);\n  const [activeMovieTrailerKey, setActiveMovieTrailerKey] = useState(\"\")\n  const serie = props.route.params.serie;\n\n  useEffect(() => {\n\n    axios\n      .get(\n        \"https://api.themoviedb.org/3/tv/\" +\n          serie.id +\n          \"/videos?api_key=afd804ef50f1e6b1ad6f29209e9395e6&language=fr-FR\"\n      )\n      .then((response) => {\n        setTrailers(response.data.results );\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n\n    axios\n      .get(\n        \"https://api.themoviedb.org/3/tv/\" +\n          serie.id +\n          \"?api_key=afd804ef50f1e6b1ad6f29209e9395e6&language=fr-FR\"\n      )\n      .then((response) => {\n        setDetails(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n      axios\n      .get(\n        \"https://api.themoviedb.org/3/tv/\" +\n          serie.id +\n          \"/credits?api_key=afd804ef50f1e6b1ad6f29209e9395e6&language=fr-FR\"\n      )\n      .then((response) => {\n        setActor(response.data.cast);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n\n  }, [])\n\n  \n\n  return (\n    <View style={styles.container}>\n      <Modal\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100%\",\n          height: \"100%\",\n        }}\n        animationType=\"slide\"\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => {\n          setModalVisible(!modalVisible);\n        }}\n      >\n        <View\n          style={{\n            flex: 1,\n            height: \"100%\",\n            justifyContent: \"center\",\n\n            backgroundColor: \"#000\",\n          }}\n        >\n          <View\n            style={{\n              backgroundColor: \"white\",\n              width: 48,\n              height: 48,\n              position: \"absolute\",\n              top: Constants.statusBarHeight + 10,\n              left: 20,\n              borderRadius: 10,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <TouchableWithoutFeedback onPress={() => setModalVisible(false)}>\n              <MaterialCommunityIcons name=\"close\" size={42} color=\"black\" />\n            </TouchableWithoutFeedback>\n          </View>\n          <View style={{ width: \"100%\" }}>\n            <YoutubePlayer height={300} play={true} videoId={activeMovieTrailerKey}  />\n          </View>\n        </View>\n      </Modal>\n      <ScrollView>\n        <TouchableWithoutFeedback>\n          <MaterialCommunityIcons\n            onPress={() => props.navigation.pop()}\n            style={{\n              position: \"absolute\",\n              top: Constants.statusBarHeight + 10,\n              left: 10,\n              zIndex: 1,\n              paddingRight: 20,\n              paddingBottom: 20,\n            }}\n            name=\"chevron-left\"\n            color={\"#fff\"}\n            size={30}\n          />\n        </TouchableWithoutFeedback>\n\n        {/* <TouchableWithoutFeedback>\n         { isExist(movie) ? ( <MaterialCommunityIcons\n            onPress={() => onTapRemoveFromWishlist(movie)}\n            style={{\n              position: \"absolute\",\n              top: Constants.statusBarHeight + 10,\n              right: 10,\n              zIndex: 1,\n              paddingRight: 20,\n              paddingBottom: 20,\n            }}\n            name=\"heart\"\n            color={\"red\"}\n            size={27}\n          />  ) : (\n            <MaterialCommunityIcons\n            onPress={() => onTapAddToWishlist(movie)}\n            style={{\n              position: \"absolute\",\n              top: Constants.statusBarHeight + 10,\n              right: 10,\n              zIndex: 1,\n              paddingRight: 20,\n              paddingBottom: 20,\n            }}\n            name=\"heart-outline\"\n            color={\"white\"}\n            size={27}\n          />\n          )\n        }\n        </TouchableWithoutFeedback> */}\n\n        <Image\n          resizeMode={\"cover\"}\n          style={styles.cover_image}\n          source={{\n            uri: \"https://image.tmdb.org/t/p/w500\" + serie.backdrop_path,\n          }}\n        />\n        \n        <View style={styles.square}>\n        <Image\n        resizeMode={\"cover\"}\n        style={styles.poster}\n        source={{\n          uri: \"https://image.tmdb.org/t/p/w500\" + serie.poster_path,\n        }}\n      />\n        </View>\n        \n\n        <View style={{ flex: 1, backgroundColor: \"pink\", padding: 20 }}>\n          <View\n            style={{\n              flex: 1,\n              flexDirection: \"row\",\n              justifyContent: \"flex-end\",\n              alignItems: \"flex-end\",\n              marginBottom: 10,\n             \n            }}\n          >\n            <View style={{ flexWrap: \"wrap\", flexDirection: \"column\", alignItems:\"flex-end\" }}>\n            <Text style={{fontSize: 18}} > Moyenne des notes : </Text>\n              <Text\n                style={\n                  serie.vote_average > 5 ? { color: \"green\" , fontSize:26, fontWeight:\"bold\"} : { color: \"red\", fontSize:20 }\n                }\n              >\n                {serie.vote_average}\n              </Text>\n            </View>\n           \n          </View>\n          <Text style={styles.title}>{serie.name}</Text>\n          <Text>\n            Nombre de saisons : {details.number_of_seasons}\n          </Text>\n          <Text>\n            Nombre apisodes : {details.number_of_episodes}\n          </Text>\n    \n          \n\n          <View style={{ flexWrap: \"wrap\" }}>\n           \n          {details.genres &&  <GenresGroup data={details.genres} />}\n          </View>\n\n          <Text style={styles.header}>Résumé</Text>\n          <Text> {serie.overview} </Text>\n          <Text style={styles.header}>Trailers</Text>\n          <View style={{ flexWrap: \"wrap\", flexDirection: \"row\" }}>\n            {trailers.map((item, index) => {\n              return index < 2 ? (\n                <TrailersItems\n                  image={serie.backdrop_path}\n                  key={item.key}\n                  item={item}\n                  setModalVisible={setModalVisible}\n                  setActiveMovieTrailerKey={setActiveMovieTrailerKey}\n                />\n              ) : (<View key={item.key} />);\n            })}\n          </View>\n          <Text style={styles.header}>Acteur</Text>\n          <View style={{flexDirection: \"row\"}}>\n          <ScrollView horizontal={true}>\n           {actor.map((item, index) => {\n            return index < 12 ? (\n              <Actor\n              key={index}\n              \n                actor={item}\n              />\n            ) : (<View key={index} />);\n          })}\n           </ScrollView>\n              \n            \n          </View>\n          <View>\n            \n          </View>\n          <Text> Crere par  </Text>\n          {/* <View>\n            {details.created_by.map((detail, index) => {\n              return <Text>\n               { detail.name}\n              </Text>\n            })}\n          </View> */}\n        </View>\n        \n      </ScrollView>\n    </View>\n  );\n\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: Constants.statusBarHeight,\n  },\n  cover_image: {\n    height: 285,\n  },\n  header: {\n    fontSize: 20,\n    fontWeight: \"700\",\n  },\n  title: {\n  fontSize: 22,\n    fontWeight: \"bold\",\n    alignItems:\"center\",\n  },\n  square: {\n    width: 100,\n    height: 150,\n    backgroundColor: \"red\",\n    zIndex: 1,\n    position: \"absolute\",\n    top: 220,\n    left: 10,\n    borderRadius: 20\n  },\n  squareo: {\n\n      width: 48,\n      height: 48,\n      backgroundColor: \"white\",\n      borderRadius: 24,\n      justifyContent: \"center\",\n      marginTop: 20,\n      alignItems: \"center\",\n\n  },\n  poster: {\n    height: \"100%\",\n    width: \"100%\",\n    borderRadius: 20\n  }\n});"]},"metadata":{},"sourceType":"module"}