{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/mansour/Desktop/Perso/movie-react-native/src/screens/HomeScreen.js\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport axios from \"axios\";\nimport Constants from \"expo-constants\";\nimport React, { useEffect, useState } from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TouchableWithoutFeedback } from \"react-native-gesture-handler\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { connect } from \"react-redux\";\nimport MovieItems from \"../components/MovieItems\";\nimport { addToWishList, fetchMovies, fetchSeries, fetchTopRatedMovies, fetchUpcomingMovies, removeFromWishlist } from \"../redux/actions\";\n\nvar _HomeScreen = function _HomeScreen(props) {\n  var navigation = useNavigation();\n  var movieReducer = props.movieReducer,\n      fetchMovies = props.fetchMovies,\n      fetchSeries = props.fetchSeries,\n      addToWishList = props.addToWishList,\n      removeFromWishlist = props.removeFromWishlist,\n      fetchTopRatedMovies = props.fetchTopRatedMovies,\n      fetchUpcomingMovies = props.fetchUpcomingMovies;\n  var movies = movieReducer.movies,\n      series = movieReducer.series,\n      wishlist = movieReducer.wishlist,\n      topMovies = movieReducer.topMovies,\n      upcomingMovies = movieReducer.upcomingMovies;\n\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentMovie = _useState2[0],\n      setCurrentMovie = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      listTopMovie = _useState4[0],\n      setListTopMovie = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      listUpcomingMovie = _useState6[0],\n      setListUpcomingMovie = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      listSerie = _useState8[0],\n      setListSerie = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      query = _useState10[0],\n      setQuery = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      queryResult = _useState12[0],\n      setQueryResult = _useState12[1];\n\n  useEffect(function () {\n    fetchTopRatedMovies();\n    setListTopMovie(topMovies);\n  }, [topMovies]);\n  useEffect(function () {\n    fetchUpcomingMovies();\n    setListUpcomingMovie(upcomingMovies);\n  }, [upcomingMovies]);\n\n  var searchData = function searchData(query) {\n    axios.get(\"https://api.themoviedb.org/3/search/movie?api_key=afd804ef50f1e6b1ad6f29209e9395e6&language=fr-FR&query=\" + query + \"&page=1&include_adult=false\").then(function (response) {\n      setQueryResult(response.data.results);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  var goSearchResults = function goSearchResults() {\n    navigation.navigate(\"ResultsQueryMovie\", {\n      queryResult: queryResult\n    });\n    setQuery(\"\");\n  };\n\n  var onTapAddToWishlist = function onTapAddToWishlist(movie) {\n    addToWishList(movie);\n  };\n\n  var onTapRemoveFromWishlist = function onTapRemoveFromWishlist(movie) {\n    removeFromWishlist(movie);\n  };\n\n  var isExist = function isExist(movie) {\n    if (wishlist.filter(function (item) {\n      return item._id === movie._id;\n    }).length > 0) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    showHorizontalScrollIndicator: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      backgroundColor: \"white\",\n      width: 200,\n      borderRadius: 10,\n      marginTop: 8\n    },\n    data: queryResult,\n    placeholder: \"Rechercher un film\",\n    onChangeText: function onChangeText(query) {\n      searchData(query);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableWithoutFeedback, {\n    style: {\n      width: 24,\n      height: 40,\n      justifyContent: \"flex-end\",\n      marginLeft: 15\n    },\n    onPress: goSearchResults,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"magnify\",\n    color: \"#998CF8\",\n    size: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  })))), React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"column\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      paddingHorizontal: 20,\n      marginVertical: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginBottom: 20,\n      fontSize: 32,\n      fontWeight: \"bold\",\n      color: \"#998CF8\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, \"Films\"), React.createElement(Image, {\n    style: styles.cover_image,\n    resizeMode: \"cover\",\n    source: {\n      uri: \"https://image.tmdb.org/t/p/w500/hziiv14OpD73u9gAak4XDDfBKa2.jpg\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      paddingHorizontal: 20,\n      marginVertical: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, \"Films populaires\"), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"chevron-right\",\n    color: \"#998CF8\",\n    size: 32,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }))), React.createElement(ScrollView, {\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      flex: 1,\n      paddingLeft: 20,\n      paddingRight: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }, listTopMovie.map(function (movie, index) {\n    return index < 20 ? React.createElement(MovieItems, {\n      key: movie.id,\n      movie: movie,\n      title: movie.title,\n      image: movie.poster_path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }\n    }) : React.createElement(View, {\n      key: movie.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }\n    });\n  }))), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      paddingHorizontal: 20,\n      marginVertical: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 11\n    }\n  }, \"Films r\\xE9cent\"), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"chevron-right\",\n    color: \"#998CF8\",\n    size: 32,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }))), React.createElement(ScrollView, {\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      flex: 1,\n      paddingLeft: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }\n  }, upcomingMovies.map(function (movie, index) {\n    return index < 20 ? React.createElement(MovieItems, {\n      key: movie.id,\n      movie: movie,\n      title: movie.title,\n      image: movie.poster_path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }\n    }) : React.createElement(View, {\n      key: movie.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }\n    });\n  })))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    movieReducer: state.movieReducer\n  };\n};\n\nvar HomeScreen = connect(mapStateToProps, {\n  fetchMovies: fetchMovies,\n  addToWishList: addToWishList,\n  removeFromWishlist: removeFromWishlist,\n  fetchTopRatedMovies: fetchTopRatedMovies,\n  fetchUpcomingMovies: fetchUpcomingMovies,\n  fetchSeries: fetchSeries\n})(_HomeScreen);\nexport default HomeScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: Constants.statusBarHeight,\n    paddingVertical: 20,\n    backgroundColor: \"#111112\"\n  },\n  header: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    paddingHorizontal: 20,\n    marginBottom: 10\n  },\n  title: {\n    fontWeight: \"bold\",\n    fontSize: 24,\n    flex: 1\n  },\n  posterView: {\n    display: \"flex\",\n    width: Dimensions.get(\"screen\").width,\n    flex: 7,\n    flexDirection: \"column\",\n    justifyContent: \"space-between\"\n  },\n  listView: {\n    width: Dimensions.get(\"screen\").width,\n    flex: 5,\n    padding: 10\n  },\n  poster: {\n    display: \"flex\",\n    width: Dimensions.get(\"screen\").width,\n    height: \"100%\",\n    justifyContent: \"flex-end\",\n    flexDirection: \"column\"\n  },\n  movieCard: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: Dimensions.get(\"screen\").width / 2.5 - 10,\n    backgroundColor: \"#FFF\",\n    borderRadius: 20,\n    height: \"80%\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginLeft: 10\n  },\n  cover_image: {\n    width: \"100%\",\n    height: 256,\n    borderRadius: 10,\n    marginBottom: 10\n  },\n  input: {\n    height: 40,\n    width: 155,\n    margin: 12,\n    borderWidth: 1\n  },\n  autocompleteContainer: {\n    flex: 1,\n    left: 0,\n    position: \"absolute\",\n    right: 0,\n    top: 0,\n    zIndex: 1\n  },\n  section: {\n    color: \"#fff\",\n    fontSize: 32,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["/Users/mansour/Desktop/Perso/movie-react-native/src/screens/HomeScreen.js"],"names":["useNavigation","axios","Constants","React","useEffect","useState","TouchableWithoutFeedback","MaterialCommunityIcons","connect","MovieItems","addToWishList","fetchMovies","fetchSeries","fetchTopRatedMovies","fetchUpcomingMovies","removeFromWishlist","_HomeScreen","props","navigation","movieReducer","movies","series","wishlist","topMovies","upcomingMovies","undefined","currentMovie","setCurrentMovie","listTopMovie","setListTopMovie","listUpcomingMovie","setListUpcomingMovie","listSerie","setListSerie","query","setQuery","queryResult","setQueryResult","searchData","get","then","response","data","results","catch","error","console","log","goSearchResults","navigate","onTapAddToWishlist","movie","onTapRemoveFromWishlist","isExist","filter","item","_id","length","styles","container","header","flexDirection","backgroundColor","width","borderRadius","marginTop","height","justifyContent","marginLeft","alignItems","paddingHorizontal","marginVertical","marginBottom","fontSize","fontWeight","color","cover_image","uri","section","flexWrap","flex","paddingLeft","paddingRight","map","index","id","title","poster_path","mapStateToProps","state","HomeScreen","StyleSheet","create","statusBarHeight","paddingVertical","posterView","display","Dimensions","listView","padding","poster","movieCard","input","margin","borderWidth","autocompleteContainer","left","position","right","top","zIndex"],"mappings":"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","sourcesContent":["import { useNavigation } from \"@react-navigation/native\";\nimport axios from \"axios\";\nimport Constants from \"expo-constants\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Dimensions,\n  Image,\n  SafeAreaView,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n} from \"react-native\";\nimport { TouchableWithoutFeedback } from \"react-native-gesture-handler\";\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\nimport { connect } from \"react-redux\";\nimport MovieItems from \"../components/MovieItems\";\nimport {\n  addToWishList,\n  fetchMovies,\n  fetchSeries,\n  fetchTopRatedMovies,\n  fetchUpcomingMovies,\n  removeFromWishlist,\n} from \"../redux/actions\";\n\nconst _HomeScreen = (props) => {\n  const navigation = useNavigation();\n  const {\n    movieReducer,\n    fetchMovies,\n    fetchSeries,\n    addToWishList,\n    removeFromWishlist,\n    fetchTopRatedMovies,\n    fetchUpcomingMovies,\n  } = props;\n\n  const { movies, series, wishlist, topMovies, upcomingMovies } = movieReducer;\n\n  const [currentMovie, setCurrentMovie] = useState(undefined);\n  const [listTopMovie, setListTopMovie] = useState([]);\n  const [listUpcomingMovie, setListUpcomingMovie] = useState();\n  const [listSerie, setListSerie] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [queryResult, setQueryResult] = useState([]);\n\n  useEffect(() => {\n    fetchTopRatedMovies();\n    setListTopMovie(topMovies);\n  }, [topMovies]);\n\n  useEffect(() => {\n    fetchUpcomingMovies();\n    setListUpcomingMovie(upcomingMovies);\n  }, [upcomingMovies]);\n\n  const searchData = (query) => {\n    axios\n      .get(\n        \"https://api.themoviedb.org/3/search/movie?api_key=afd804ef50f1e6b1ad6f29209e9395e6&language=fr-FR&query=\" +\n          query +\n          \"&page=1&include_adult=false\"\n      )\n      .then((response) => {\n        setQueryResult(response.data.results);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const goSearchResults = () => {\n    navigation.navigate(\"ResultsQueryMovie\", { queryResult: queryResult });\n    setQuery(\"\");\n  };\n\n  const onTapAddToWishlist = (movie) => {\n    addToWishList(movie);\n  };\n\n  const onTapRemoveFromWishlist = (movie) => {\n    removeFromWishlist(movie);\n  };\n\n  const isExist = (movie) => {\n    if (wishlist.filter((item) => item._id === movie._id).length > 0) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return (\n    <SafeAreaView\n      style={styles.container}\n      showHorizontalScrollIndicator={false}\n    >\n      <View style={styles.header}>\n        <View style={{ flexDirection: \"row\" }}>\n          <TextInput\n            style={{\n              backgroundColor: \"white\",\n              width: 200,\n              borderRadius: 10,\n              marginTop: 8,\n            }}\n            data={queryResult}\n            placeholder=\"Rechercher un film\"\n            onChangeText={(query) => {\n              searchData(query);\n            }}\n          />\n          <TouchableWithoutFeedback\n            style={{\n              width: 24,\n              height: 40,\n              justifyContent: \"flex-end\",\n              marginLeft: 15,\n            }}\n            onPress={goSearchResults}\n          >\n            <MaterialCommunityIcons\n              name=\"magnify\"\n              color={\"#998CF8\"}\n              size={30}\n            />\n          </TouchableWithoutFeedback>\n        </View>\n      </View>\n\n      <ScrollView>\n        <View\n          style={{\n            flexDirection: \"column\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            paddingHorizontal: 20,\n            marginVertical: 20,\n          }}\n        >\n          <Text\n            style={{\n              marginBottom: 20,\n              fontSize: 32,\n              fontWeight: \"bold\",\n              color: \"#998CF8\",\n            }}\n          >\n            Films\n          </Text>\n          <Image\n            style={styles.cover_image}\n            resizeMode=\"cover\"\n            source={{\n              uri:\n                \"https://image.tmdb.org/t/p/w500/hziiv14OpD73u9gAak4XDDfBKa2.jpg\",\n            }}\n          />\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            paddingHorizontal: 20,\n            marginVertical: 20,\n          }}\n        >\n          <Text style={styles.section}>Films populaires</Text>\n          <View\n            style={{\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n              alignItems: \"center\",\n            }}\n          >\n            <MaterialCommunityIcons\n              name=\"chevron-right\"\n              color={\"#998CF8\"}\n              size={32}\n            />\n          </View>\n        </View>\n        <ScrollView horizontal={true}>\n          <View\n            style={{\n              flexDirection: \"row\",\n              flex: 1,\n              paddingLeft: 20,\n              paddingRight: 20,\n            }}\n          >\n            {listTopMovie.map((movie, index) => {\n              return index < 20 ? (\n                <MovieItems\n                  key={movie.id}\n                  movie={movie}\n                  title={movie.title}\n                  image={movie.poster_path}\n                />\n              ) : (\n                <View key={movie.id} />\n              );\n            })}\n          </View>\n        </ScrollView>\n\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            paddingHorizontal: 20,\n            marginVertical: 20,\n          }}\n        >\n          <Text style={styles.section}>Films récent</Text>\n          <View\n            style={{\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n              alignItems: \"center\",\n            }}\n          >\n            <MaterialCommunityIcons\n              name=\"chevron-right\"\n              color={\"#998CF8\"}\n              size={32}\n            />\n          </View>\n        </View>\n        <ScrollView horizontal={true}>\n          <View style={{ flexDirection: \"row\", flex: 1, paddingLeft: 20 }}>\n            {upcomingMovies.map((movie, index) => {\n              return index < 20 ? (\n                <MovieItems\n                  key={movie.id}\n                  movie={movie}\n                  title={movie.title}\n                  image={movie.poster_path}\n                />\n              ) : (\n                <View key={movie.id} />\n              );\n            })}\n          </View>\n        </ScrollView>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  movieReducer: state.movieReducer,\n});\n\nconst HomeScreen = connect(mapStateToProps, {\n  fetchMovies,\n  addToWishList,\n  removeFromWishlist,\n  fetchTopRatedMovies,\n  fetchUpcomingMovies,\n  fetchSeries,\n})(_HomeScreen);\n\nexport default HomeScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: Constants.statusBarHeight,\n    paddingVertical: 20,\n    backgroundColor: \"#111112\",\n  },\n  header: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    paddingHorizontal: 20,\n    marginBottom: 10,\n  },\n  title: {\n    fontWeight: \"bold\",\n    fontSize: 24,\n    flex: 1,\n  },\n  posterView: {\n    display: \"flex\",\n    width: Dimensions.get(\"screen\").width,\n    flex: 7,\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n  },\n  listView: {\n    width: Dimensions.get(\"screen\").width,\n    flex: 5,\n    padding: 10,\n  },\n  poster: {\n    display: \"flex\",\n    width: Dimensions.get(\"screen\").width,\n    height: \"100%\",\n    justifyContent: \"flex-end\",\n    flexDirection: \"column\",\n  },\n  movieCard: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: Dimensions.get(\"screen\").width / 2.5 - 10,\n    backgroundColor: \"#FFF\",\n    borderRadius: 20,\n    height: \"80%\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginLeft: 10,\n  },\n  cover_image: {\n    width: \"100%\",\n    height: 256,\n    borderRadius: 10,\n    marginBottom: 10,\n  },\n  input: {\n    height: 40,\n    width: 155,\n    margin: 12,\n    borderWidth: 1,\n  },\n  autocompleteContainer: {\n    flex: 1,\n    left: 0,\n    position: \"absolute\",\n    right: 0,\n    top: 0,\n    zIndex: 1,\n  },\n  section: {\n    color: \"#fff\",\n    fontSize: 32,\n    fontWeight: \"bold\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}