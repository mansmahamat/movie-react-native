{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Action } from \"./actions\";\nvar initialState = {\n  movies: [],\n  series: [],\n  topMovies: [],\n  upcomingMovies: [],\n  wishlist: [],\n  users: []\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case Action.GET_MOVIES:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        movies: action.payload\n      });\n\n    case Action.GET_SERIES:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        series: action.payload\n      });\n\n    case Action.GET_UPCOMING_MOVIES:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        upcomingMovies: action.payload\n      });\n\n    case Action.GET_TOP_RATED_MOVIES:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        topMovies: action.payload\n      });\n\n    case Action.ADD_TO_WISHLIST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        wishlist: [].concat(_toConsumableArray(state.wishlist), [action.payload])\n      });\n\n    case Action.REMOVE_FROM_WISHLIST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        wishlist: state.wishlist.filter(function (movie) {\n          return movie.id !== action.payload.id;\n        })\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/mansour/Desktop/React_Native_Local_Storage_YT/src/redux/reducers.js"],"names":["Action","initialState","movies","series","topMovies","upcomingMovies","wishlist","users","state","action","type","GET_MOVIES","payload","GET_SERIES","GET_UPCOMING_MOVIES","GET_TOP_RATED_MOVIES","ADD_TO_WISHLIST","REMOVE_FROM_WISHLIST","filter","movie","id"],"mappings":";;;;;;;AAAA,SAASA,MAAT;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,MAAM,EAAE,EAFW;AAGnBC,EAAAA,SAAS,EAAE,EAHQ;AAInBC,EAAAA,cAAc,EAAE,EAJG;AAKnBC,EAAAA,QAAQ,EAAE,EALS;AAMnBC,EAAAA,KAAK,EAAE;AANY,CAArB;AASA,eAAe,YAAwC;AAAA,MAA9BC,KAA8B,uEAAtBP,YAAsB;AAAA,MAARQ,MAAQ;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,MAAM,CAACW,UAAZ;AACE,6CACKH,KADL;AAEEN,QAAAA,MAAM,EAAEO,MAAM,CAACG;AAFjB;;AAIA,SAAKZ,MAAM,CAACa,UAAZ;AACE,6CACKL,KADL;AAEEL,QAAAA,MAAM,EAAEM,MAAM,CAACG;AAFjB;;AAIF,SAAKZ,MAAM,CAACc,mBAAZ;AACA,6CACKN,KADL;AAEEH,QAAAA,cAAc,EAAEI,MAAM,CAACG;AAFzB;;AAIF,SAAKZ,MAAM,CAACe,oBAAZ;AACE,6CACKP,KADL;AAEEJ,QAAAA,SAAS,EAAEK,MAAM,CAACG;AAFpB;;AAIF,SAAKZ,MAAM,CAACgB,eAAZ;AACE,6CACKR,KADL;AAEEF,QAAAA,QAAQ,+BAAME,KAAK,CAACF,QAAZ,IAAsBG,MAAM,CAACG,OAA7B;AAFV;;AAIF,SAAKZ,MAAM,CAACiB,oBAAZ;AACE,6CACKT,KADL;AAEEF,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeY,MAAf,CACR,UAACC,KAAD;AAAA,iBAAWA,KAAK,CAACC,EAAN,KAAaX,MAAM,CAACG,OAAP,CAAeQ,EAAvC;AAAA,SADQ;AAFZ;;AAMF;AACE,aAAOZ,KAAP;AAlCJ;AAoCD","sourcesContent":["import { Action } from \"./actions\";\n\nconst initialState = {\n  movies: [],\n  series: [],\n  topMovies: [],\n  upcomingMovies: [],\n  wishlist: [],\n  users: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case Action.GET_MOVIES:\n      return {\n        ...state,\n        movies: action.payload,\n      };\n      case Action.GET_SERIES:\n        return {\n          ...state,\n          series: action.payload,\n        };\n      case Action.GET_UPCOMING_MOVIES:\n      return {\n        ...state,\n        upcomingMovies: action.payload,\n      };\n    case Action.GET_TOP_RATED_MOVIES:\n      return {\n        ...state,\n        topMovies: action.payload,\n      };\n    case Action.ADD_TO_WISHLIST:\n      return {\n        ...state,\n        wishlist: [...state.wishlist, action.payload],\n      };\n    case Action.REMOVE_FROM_WISHLIST:\n      return {\n        ...state,\n        wishlist: state.wishlist.filter(\n          (movie) => movie.id !== action.payload.id\n        ),\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}