{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/mansour/Desktop/React_Native_Local_Storage_YT/src/screens/HomeScreen.js\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport MovieItems from \"../components/MovieItems\";\nimport SerieItems from \"../components/SerieItems\";\nimport Constants from \"expo-constants\";\nimport { connect } from \"react-redux\";\nimport { fetchMovies, fetchSeries, addToWishList, removeFromWishlist, fetchTopRatedMovies, fetchUpcomingMovies } from \"../redux/actions\";\nimport { dummyData } from \"../data/Data\";\nimport Autocomplete from \"react-native-autocomplete-input\";\nimport axios from \"axios\";\n\nvar _HomeScreen = function _HomeScreen(props) {\n  var navigation = useNavigation();\n  var movieReducer = props.movieReducer,\n      fetchMovies = props.fetchMovies,\n      fetchSeries = props.fetchSeries,\n      addToWishList = props.addToWishList,\n      removeFromWishlist = props.removeFromWishlist,\n      fetchTopRatedMovies = props.fetchTopRatedMovies,\n      fetchUpcomingMovies = props.fetchUpcomingMovies;\n  var movies = movieReducer.movies,\n      series = movieReducer.series,\n      wishlist = movieReducer.wishlist,\n      topMovies = movieReducer.topMovies,\n      upcomingMovies = movieReducer.upcomingMovies;\n\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentMovie = _useState2[0],\n      setCurrentMovie = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      listTopMovie = _useState4[0],\n      setListTopMovie = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      listUpcomingMovie = _useState6[0],\n      setListUpcomingMovie = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      listSerie = _useState8[0],\n      setListSerie = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      query = _useState10[0],\n      setQuery = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      queryResult = _useState12[0],\n      setQueryResult = _useState12[1];\n\n  useEffect(function () {\n    fetchTopRatedMovies();\n    setListTopMovie(topMovies);\n  }, [topMovies]);\n  useEffect(function () {\n    fetchUpcomingMovies();\n    setListUpcomingMovie(upcomingMovies);\n  }, [upcomingMovies]);\n  useEffect(function () {\n    fetchSeries();\n    setListSerie(series);\n  }, []);\n\n  var searchData = function searchData(query) {\n    axios.get(\"https://api.themoviedb.org/3/search/movie?api_key=afd804ef50f1e6b1ad6f29209e9395e6&language=fr-FR&query=\" + query + \"&page=1&include_adult=false\").then(function (response) {\n      setQueryResult(response.data.results);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  var goSearchResults = function goSearchResults() {\n    navigation.navigate(\"ResultsQueryMovie\", {\n      queryResult: queryResult\n    });\n    setQuery(\"\");\n  };\n\n  var onTapAddToWishlist = function onTapAddToWishlist(movie) {\n    addToWishList(movie);\n  };\n\n  var onTapRemoveFromWishlist = function onTapRemoveFromWishlist(movie) {\n    removeFromWishlist(movie);\n  };\n\n  var isExist = function isExist(movie) {\n    if (wishlist.filter(function (item) {\n      return item._id === movie._id;\n    }).length > 0) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    showHorizontalScrollIndicator: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, \"Movied App\"), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 1\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      backgroundColor: \"green\",\n      width: 150\n    },\n    data: queryResult,\n    placeholder: \"searchhint\",\n    onChangeText: function onChangeText(query) {\n      searchData(query);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 1\n    }\n  }), React.createElement(Button, {\n    onPress: goSearchResults,\n    title: \"Learn More\",\n    color: \"#841584\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }))), React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      paddingHorizontal: 20,\n      marginVertical: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: styles.cover_image,\n    source: {\n      uri: \"https://image.tmdb.org/t/p/w500/fatz1aegtBGh7KS0gipcsw9MqUn.jpg\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      paddingHorizontal: 20,\n      marginVertical: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, \"Popular movie\"), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"chevron-right\",\n    size: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }))), React.createElement(ScrollView, {\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      flex: 1,\n      paddingLeft: 20,\n      paddingRight: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, listTopMovie.map(function (movie, index) {\n    return index < 15 ? React.createElement(MovieItems, {\n      key: movie.id,\n      movie: movie,\n      title: movie.title,\n      image: movie.poster_path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    }) : React.createElement(View, {\n      key: movie.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    });\n  }))), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      paddingHorizontal: 20,\n      marginVertical: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }, \"Recent movie\"), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"chevron-right\",\n    size: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }))), React.createElement(ScrollView, {\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      flex: 1,\n      paddingLeft: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 11\n    }\n  }, upcomingMovies.map(function (movie, index) {\n    return index < 15 ? React.createElement(MovieItems, {\n      key: movie.id,\n      movie: movie,\n      title: movie.title,\n      image: movie.poster_path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }\n    }) : React.createElement(View, {\n      key: movie.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }\n    });\n  }))), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      paddingHorizontal: 20,\n      marginVertical: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 11\n    }\n  }, \"Popular serie\"), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 11\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"chevron-right\",\n    size: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }\n  }))), React.createElement(ScrollView, {\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      flex: 1,\n      paddingLeft: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  }, listSerie.map(function (serie, index) {\n    return index < 15 ? React.createElement(SerieItems, {\n      key: serie.id,\n      serie: serie,\n      title: serie.title,\n      image: serie.poster_path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }\n    }) : React.createElement(View, {\n      key: serie.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }\n    });\n  })))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    movieReducer: state.movieReducer\n  };\n};\n\nvar HomeScreen = connect(mapStateToProps, {\n  fetchMovies: fetchMovies,\n  addToWishList: addToWishList,\n  removeFromWishlist: removeFromWishlist,\n  fetchTopRatedMovies: fetchTopRatedMovies,\n  fetchUpcomingMovies: fetchUpcomingMovies,\n  fetchSeries: fetchSeries\n})(_HomeScreen);\nexport default HomeScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: Constants.statusBarHeight,\n    paddingVertical: 20\n  },\n  header: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 20,\n    marginBottom: 10\n  },\n  title: {\n    fontWeight: \"bold\",\n    fontSize: 24,\n    flex: 1\n  },\n  posterView: {\n    display: \"flex\",\n    width: Dimensions.get(\"screen\").width,\n    flex: 7,\n    flexDirection: \"column\",\n    justifyContent: \"space-between\"\n  },\n  listView: {\n    width: Dimensions.get(\"screen\").width,\n    flex: 5,\n    padding: 10\n  },\n  poster: {\n    display: \"flex\",\n    width: Dimensions.get(\"screen\").width,\n    height: \"100%\",\n    justifyContent: \"flex-end\",\n    flexDirection: \"column\"\n  },\n  movieCard: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: Dimensions.get(\"screen\").width / 2.5 - 10,\n    backgroundColor: \"#FFF\",\n    borderRadius: 20,\n    height: \"80%\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginLeft: 10\n  },\n  cover_image: {\n    width: \"100%\",\n    height: 256,\n    borderRadius: 10,\n    marginBottom: 10\n  },\n  input: {\n    height: 40,\n    width: 155,\n    margin: 12,\n    borderWidth: 1\n  },\n  autocompleteContainer: {\n    flex: 1,\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    zIndex: 1\n  }\n});","map":{"version":3,"sources":["/Users/mansour/Desktop/React_Native_Local_Storage_YT/src/screens/HomeScreen.js"],"names":["useNavigation","React","useEffect","useState","MaterialCommunityIcons","MovieItems","SerieItems","Constants","connect","fetchMovies","fetchSeries","addToWishList","removeFromWishlist","fetchTopRatedMovies","fetchUpcomingMovies","dummyData","Autocomplete","axios","_HomeScreen","props","navigation","movieReducer","movies","series","wishlist","topMovies","upcomingMovies","undefined","currentMovie","setCurrentMovie","listTopMovie","setListTopMovie","listUpcomingMovie","setListUpcomingMovie","listSerie","setListSerie","query","setQuery","queryResult","setQueryResult","searchData","get","then","response","data","results","catch","error","console","log","goSearchResults","navigate","onTapAddToWishlist","movie","onTapRemoveFromWishlist","isExist","filter","item","_id","length","styles","container","header","title","flexDirection","justifyContent","backgroundColor","width","alignItems","paddingHorizontal","marginVertical","cover_image","uri","flexWrap","flex","paddingLeft","paddingRight","map","index","id","poster_path","serie","mapStateToProps","state","HomeScreen","StyleSheet","create","marginTop","statusBarHeight","paddingVertical","marginBottom","fontWeight","fontSize","posterView","display","Dimensions","listView","padding","poster","height","movieCard","borderRadius","marginLeft","input","margin","borderWidth","autocompleteContainer","left","position","right","top","zIndex"],"mappings":"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","sourcesContent":["import { useNavigation } from \"@react-navigation/native\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  StyleSheet,\n  Dimensions,\n  ImageBackground,\n  ScrollView,\n  FlatList,\n  TextInput,\n  Image,\n  SafeAreaView,\n  Button,\n} from \"react-native\";\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\nimport MovieItems from \"../components/MovieItems\";\nimport SerieItems from \"../components/SerieItems\";\nimport Constants from \"expo-constants\";\nimport { connect } from \"react-redux\";\nimport {\n  fetchMovies,\n  fetchSeries,\n  addToWishList,\n  removeFromWishlist,\n  fetchTopRatedMovies,\n  fetchUpcomingMovies,\n} from \"../redux/actions\";\nimport { dummyData } from \"../data/Data\";\nimport Autocomplete from \"react-native-autocomplete-input\";\nimport axios from \"axios\";\n\nconst _HomeScreen = (props) => {\n  const navigation = useNavigation();\n  const {\n    movieReducer,\n    fetchMovies,\n    fetchSeries,\n    addToWishList,\n    removeFromWishlist,\n    fetchTopRatedMovies,\n    fetchUpcomingMovies,\n  } = props;\n\n  const { movies, series, wishlist, topMovies, upcomingMovies } = movieReducer;\n\n  const [currentMovie, setCurrentMovie] = useState(undefined);\n  const [listTopMovie, setListTopMovie] = useState([]);\n  const [listUpcomingMovie, setListUpcomingMovie] = useState();\n  const [listSerie, setListSerie] = useState([])\n  const [query, setQuery] = useState(\"\");\n  const [queryResult, setQueryResult] = useState([]);\n\n  useEffect(() => {\n    fetchTopRatedMovies();\n    setListTopMovie(topMovies);\n  }, [topMovies]);\n\n  useEffect(() => {\n    fetchUpcomingMovies();\n    setListUpcomingMovie(upcomingMovies);\n  }, [upcomingMovies]);\n\n  useEffect(() => {\n    fetchSeries()\n  setListSerie(series)\n  }, [])\n\n  const searchData = (query) => {\n    axios\n      .get(\n        \"https://api.themoviedb.org/3/search/movie?api_key=afd804ef50f1e6b1ad6f29209e9395e6&language=fr-FR&query=\" + query +\"&page=1&include_adult=false\"\n      )\n      .then((response) => {\n        setQueryResult(response.data.results)\n       \n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n      \n  }\n\n  const goSearchResults = () => {\n    navigation.navigate(\"ResultsQueryMovie\", { queryResult: queryResult })\n    setQuery(\"\")\n  }\n\n  const onTapAddToWishlist = (movie) => {\n    addToWishList(movie);\n  };\n\n  const onTapRemoveFromWishlist = (movie) => {\n    removeFromWishlist(movie);\n  };\n\n  const isExist = (movie) => {\n    if (wishlist.filter((item) => item._id === movie._id).length > 0) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return (\n    <SafeAreaView\n      style={styles.container}\n      showHorizontalScrollIndicator={false}\n    >\n      <View style={styles.header}>\n        <Text style={styles.title}>Movied App</Text>\n<View style={{flexDirection: \"row\", justifyContent:\"center\"}}>\n<TextInput\n       style={{\n        backgroundColor: \"green\",\n        width: 150\n       \n      }}\n      data={queryResult}\n      placeholder=\"searchhint\"\n      \n     \n      onChangeText={(query) => {\n        searchData(query);\n      }}\n    \n    />\n    <Button\n  onPress={goSearchResults}\n  title=\"Learn More\"\n  color=\"#841584\"\n/>\n\n \n</View>\n\n\n        \n  \n\n      </View>\n\n      \n\n      \n\n      <ScrollView>\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          paddingHorizontal: 20,\n          marginVertical: 20,\n        }}\n      >\n         \n        <Image\n          style={styles.cover_image}\n          source={{\n            uri:\n              \"https://image.tmdb.org/t/p/w500/fatz1aegtBGh7KS0gipcsw9MqUn.jpg\",\n          }}\n        />\n      </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            paddingHorizontal: 20,\n            marginVertical: 20,\n          }}\n        >\n          <Text>Popular movie</Text>\n          <View\n            style={{\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n              alignItems: \"center\",\n            }}\n          >\n            <MaterialCommunityIcons name=\"chevron-right\" size={20} />\n          </View>\n        </View>\n        <ScrollView horizontal={true}>\n          <View\n            style={{\n              flexDirection: \"row\",\n              flex: 1,\n              paddingLeft: 20,\n              paddingRight: 20,\n            }}\n          >\n            {listTopMovie.map((movie, index) => {\n              return index < 15 ? (\n                <MovieItems\n                  key={movie.id}\n                  movie={movie}\n                  title={movie.title}\n                  image={movie.poster_path}\n                />\n              ) : (\n                <View key={movie.id} />\n              );\n            })}\n          </View>\n        </ScrollView>\n\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            paddingHorizontal: 20,\n            marginVertical: 20,\n          }}\n        >\n          <Text>Recent movie</Text>\n          <View\n            style={{\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n              alignItems: \"center\",\n            }}\n          >\n            <MaterialCommunityIcons name=\"chevron-right\" size={20} />\n          </View>\n        </View>\n        <ScrollView horizontal={true}>\n          <View style={{ flexDirection: \"row\", flex: 1, paddingLeft: 20 }}>\n            {upcomingMovies.map((movie, index) => {\n              return index < 15 ? (\n                <MovieItems\n                  key={movie.id}\n                  movie={movie}\n                  title={movie.title}\n                  image={movie.poster_path}\n                />\n              ) : (\n                <View key={movie.id} />\n              );\n            })}\n          </View>\n        </ScrollView>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            paddingHorizontal: 20,\n            marginVertical: 20,\n          }}\n        >\n          <Text>Popular serie</Text>\n          <View\n            style={{\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n              alignItems: \"center\",\n            }}\n          >\n            <MaterialCommunityIcons name=\"chevron-right\" size={20} />\n          </View>\n        </View>\n        <ScrollView horizontal={true}>\n          <View style={{ flexDirection: \"row\", flex: 1, paddingLeft: 20 }}>\n            {listSerie.map((serie, index) => {\n              return index < 15 ? (\n                <SerieItems\n                  key={serie.id}\n                  serie={serie}\n                  title={serie.title}\n                  image={serie.poster_path}\n                />\n              ) : (\n                <View key={serie.id} />\n              );\n            })}\n          </View>\n        </ScrollView>\n   \n      </ScrollView>\n      \n    </SafeAreaView>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  movieReducer: state.movieReducer,\n});\n\nconst HomeScreen = connect(mapStateToProps, {\n  fetchMovies,\n  addToWishList,\n  removeFromWishlist,\n  fetchTopRatedMovies,\n  fetchUpcomingMovies,\n  fetchSeries,\n})(_HomeScreen);\n\nexport default HomeScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: Constants.statusBarHeight,\n    paddingVertical: 20,\n  },\n  header: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 20,\n    marginBottom: 10,\n  },\n  title: {\n    fontWeight: \"bold\",\n    fontSize: 24,\n    flex: 1,\n  },\n  posterView: {\n    display: \"flex\",\n    width: Dimensions.get(\"screen\").width,\n    flex: 7,\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n  },\n  listView: {\n    width: Dimensions.get(\"screen\").width,\n    flex: 5,\n    padding: 10,\n  },\n  poster: {\n    display: \"flex\",\n    width: Dimensions.get(\"screen\").width,\n    height: \"100%\",\n    justifyContent: \"flex-end\",\n    flexDirection: \"column\",\n  },\n  movieCard: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: Dimensions.get(\"screen\").width / 2.5 - 10,\n    backgroundColor: \"#FFF\",\n    borderRadius: 20,\n    height: \"80%\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginLeft: 10,\n  },\n  cover_image: {\n    width: \"100%\",\n    height: 256,\n    borderRadius: 10,\n    marginBottom: 10,\n  },\n  input: {\n    height: 40,\n    width: 155,\n    margin: 12,\n    borderWidth: 1,\n  },\n  autocompleteContainer: {\n    flex: 1,\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    zIndex: 1\n  }\n});\n"]},"metadata":{},"sourceType":"module"}