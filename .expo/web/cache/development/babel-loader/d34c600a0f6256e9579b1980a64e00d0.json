{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/mansour/Desktop/Perso/movie-react-native/src/screens/SerieScreen.js\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport axios from \"axios\";\nimport Constants from \"expo-constants\";\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TouchableWithoutFeedback } from \"react-native-gesture-handler\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { connect } from \"react-redux\";\nimport SerieItems from \"../components/SerieItems\";\nimport { addToWishList, fetchOnAirSeries, fetchSeries, fetchTvSeries, fetchTopRatedMovies, fetchUpcomingMovies, removeFromWishlist } from \"../redux/actions\";\n\nvar _SerieScreen = function _SerieScreen(props) {\n  var navigation = useNavigation();\n  var movieReducer = props.movieReducer,\n      fetchOnAirSeries = props.fetchOnAirSeries,\n      fetchSeries = props.fetchSeries,\n      fetchTvSeries = props.fetchTvSeries,\n      addToWishList = props.addToWishList,\n      removeFromWishlist = props.removeFromWishlist,\n      fetchTopRatedMovies = props.fetchTopRatedMovies,\n      fetchUpcomingMovies = props.fetchUpcomingMovies;\n  var onAirSeries = movieReducer.onAirSeries,\n      series = movieReducer.series,\n      tvSeries = movieReducer.tvSeries,\n      wishlist = movieReducer.wishlist,\n      topMovies = movieReducer.topMovies,\n      upcomingMovies = movieReducer.upcomingMovies;\n\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentMovie = _useState2[0],\n      setCurrentMovie = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      listTopMovie = _useState4[0],\n      setListTopMovie = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      listUpcomingMovie = _useState6[0],\n      setListUpcomingMovie = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      listSerie = _useState8[0],\n      setListSerie = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      listTvSerie = _useState10[0],\n      setListTvSerie = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      listAirSerie = _useState12[0],\n      setlistAirSerie = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      query = _useState14[0],\n      setQuery = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      queryResult = _useState16[0],\n      setQueryResult = _useState16[1];\n\n  var _useState17 = useState(\"magnify\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      iconName = _useState18[0],\n      setIconName = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      isAnimating = _useState20[0],\n      setIsAnimating = _useState20[1];\n\n  var _useState21 = useState(new Animated.Value(24)),\n      _useState22 = _slicedToArray(_useState21, 2),\n      fadeAnim = _useState22[0],\n      setFadeAnim = _useState22[1];\n\n  var deviceWidth = Dimensions.get(\"window\").width;\n  useEffect(function () {\n    fetchSeries();\n    setListSerie(series);\n  }, [series]);\n  useEffect(function () {\n    fetchOnAirSeries();\n    setlistAirSerie(onAirSeries);\n  }, [onAirSeries]);\n  useEffect(function () {\n    fetchTvSeries();\n    setListTvSerie(tvSeries);\n  }, [tvSeries]);\n\n  var searchData = function searchData(query) {\n    axios.get(\"https://api.themoviedb.org/3/search/tv?api_key=afd804ef50f1e6b1ad6f29209e9395e6&language=fr-FR&query=\" + query + \"&page=1&include_adult=false\").then(function (response) {\n      setQueryResult(response.data.results);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  var resetQuery = function resetQuery() {\n    setQuery(\"\");\n  };\n\n  var goSearchResults = function goSearchResults() {\n    navigation.navigate(\"ResultsQuerySerie\", {\n      queryResult: queryResult,\n      resetQuery: resetQuery\n    });\n  };\n\n  var onTapAddToWishlist = function onTapAddToWishlist(serie) {\n    addToWishList(serie);\n  };\n\n  var onTapRemoveFromWishlist = function onTapRemoveFromWishlist(serie) {\n    removeFromWishlist(serie);\n    s;\n  };\n\n  var isExist = function isExist(serie) {\n    if (wishlist.filter(function (item) {\n      return item._id === serie._id;\n    }).length > 0) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    showHorizontalScrollIndicator: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      backgroundColor: \"white\",\n      width: 200,\n      borderRadius: 10,\n      marginTop: 8\n    },\n    data: query,\n    placeholder: \"Rechercher une s\\xE9rie\",\n    onChangeText: function onChangeText(query) {\n      searchData(query);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableWithoutFeedback, {\n    style: {\n      width: 24,\n      height: 40,\n      justifyContent: \"flex-end\",\n      marginLeft: 15\n    },\n    onPress: goSearchResults,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"magnify\",\n    color: \"#998CF8\",\n    size: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  })))), React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"column\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      paddingHorizontal: 20,\n      marginVertical: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginBottom: 20,\n      fontSize: 32,\n      fontWeight: \"bold\",\n      color: \"#998CF8\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, \"Series\"), React.createElement(Image, {\n    style: styles.cover_image,\n    source: {\n      uri: \"https://image.tmdb.org/t/p/w500/tsRy63Mu5cu8etL1X7ZLyf7UP1M.jpg\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      paddingHorizontal: 20,\n      marginVertical: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, \"Popular series\"), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"chevron-right\",\n    color: \"#998CF8\",\n    size: 32,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }))), React.createElement(ScrollView, {\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      flex: 1,\n      paddingLeft: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }, listSerie.map(function (serie, index) {\n    return index < 15 ? React.createElement(SerieItems, {\n      key: serie.id,\n      serie: serie,\n      title: serie.title,\n      image: serie.poster_path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    }) : React.createElement(View, {\n      key: serie.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }\n    });\n  }))), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      paddingHorizontal: 20,\n      marginVertical: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, \"On display \"), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"chevron-right\",\n    color: \"#998CF8\",\n    size: 32,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }))), React.createElement(ScrollView, {\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      flex: 1,\n      paddingLeft: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 11\n    }\n  }, listAirSerie.map(function (serie, index) {\n    return index < 20 ? React.createElement(SerieItems, {\n      key: serie.id,\n      serie: serie,\n      title: serie.title,\n      image: serie.poster_path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }\n    }) : React.createElement(View, {\n      key: serie.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }\n    });\n  }))), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      paddingHorizontal: 20,\n      marginVertical: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  }, \"Top rated \"), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 11\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"chevron-right\",\n    color: \"#998CF8\",\n    size: 32,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }))), React.createElement(ScrollView, {\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      flex: 1,\n      paddingLeft: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 11\n    }\n  }, listTvSerie.map(function (serie, index) {\n    return index < 20 ? React.createElement(SerieItems, {\n      key: serie.id,\n      serie: serie,\n      title: serie.title,\n      image: serie.poster_path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }\n    }) : React.createElement(View, {\n      key: serie.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }\n    });\n  })))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    movieReducer: state.movieReducer\n  };\n};\n\nvar SerieScreen = connect(mapStateToProps, {\n  fetchOnAirSeries: fetchOnAirSeries,\n  addToWishList: addToWishList,\n  removeFromWishlist: removeFromWishlist,\n  fetchTopRatedMovies: fetchTopRatedMovies,\n  fetchUpcomingMovies: fetchUpcomingMovies,\n  fetchSeries: fetchSeries,\n  fetchTvSeries: fetchTvSeries\n})(_SerieScreen);\nexport default SerieScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: Constants.statusBarHeight,\n    paddingVertical: 20,\n    backgroundColor: \"#111112\"\n  },\n  header: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    paddingHorizontal: 20,\n    marginBottom: 20\n  },\n  title: {\n    fontWeight: \"bold\",\n    fontSize: 24,\n    flex: 1\n  },\n  posterView: {\n    display: \"flex\",\n    width: Dimensions.get(\"screen\").width,\n    flex: 7,\n    flexDirection: \"column\",\n    justifyContent: \"space-between\"\n  },\n  listView: {\n    width: Dimensions.get(\"screen\").width,\n    flex: 5,\n    padding: 10\n  },\n  poster: {\n    display: \"flex\",\n    width: Dimensions.get(\"screen\").width,\n    height: \"100%\",\n    justifyContent: \"flex-end\",\n    flexDirection: \"column\"\n  },\n  movieCard: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: Dimensions.get(\"screen\").width / 2.5 - 10,\n    backgroundColor: \"#FFF\",\n    borderRadius: 20,\n    height: \"80%\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginLeft: 10\n  },\n  cover_image: {\n    width: \"100%\",\n    height: 256,\n    borderRadius: 10,\n    marginBottom: 10\n  },\n  input: {\n    height: 40,\n    width: 155,\n    margin: 12,\n    borderWidth: 1\n  },\n  autocompleteContainer: {\n    flex: 1,\n    left: 0,\n    position: \"absolute\",\n    right: 0,\n    top: 0,\n    zIndex: 1\n  },\n  section: {\n    color: \"#fff\",\n    fontSize: 32,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["/Users/mansour/Desktop/Perso/movie-react-native/src/screens/SerieScreen.js"],"names":["useNavigation","axios","Constants","React","useEffect","useState","TouchableWithoutFeedback","MaterialCommunityIcons","connect","SerieItems","addToWishList","fetchOnAirSeries","fetchSeries","fetchTvSeries","fetchTopRatedMovies","fetchUpcomingMovies","removeFromWishlist","_SerieScreen","props","navigation","movieReducer","onAirSeries","series","tvSeries","wishlist","topMovies","upcomingMovies","undefined","currentMovie","setCurrentMovie","listTopMovie","setListTopMovie","listUpcomingMovie","setListUpcomingMovie","listSerie","setListSerie","listTvSerie","setListTvSerie","listAirSerie","setlistAirSerie","query","setQuery","queryResult","setQueryResult","iconName","setIconName","isAnimating","setIsAnimating","Animated","Value","fadeAnim","setFadeAnim","deviceWidth","Dimensions","get","width","searchData","then","response","data","results","catch","error","console","log","resetQuery","goSearchResults","navigate","onTapAddToWishlist","serie","onTapRemoveFromWishlist","s","isExist","filter","item","_id","length","styles","container","header","flexDirection","backgroundColor","borderRadius","marginTop","height","justifyContent","marginLeft","alignItems","paddingHorizontal","marginVertical","marginBottom","fontSize","fontWeight","color","cover_image","uri","section","flexWrap","flex","paddingLeft","map","index","id","title","poster_path","mapStateToProps","state","SerieScreen","StyleSheet","create","statusBarHeight","paddingVertical","posterView","display","listView","padding","poster","movieCard","input","margin","borderWidth","autocompleteContainer","left","position","right","top","zIndex"],"mappings":"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","sourcesContent":["import { useNavigation } from \"@react-navigation/native\";\nimport axios from \"axios\";\nimport Constants from \"expo-constants\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Dimensions,\n  Animated,\n  Image,\n  SafeAreaView,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n} from \"react-native\";\nimport { TouchableWithoutFeedback } from \"react-native-gesture-handler\";\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\nimport { connect } from \"react-redux\";\nimport SerieItems from \"../components/SerieItems\";\nimport {\n  addToWishList,\n  fetchOnAirSeries,\n  fetchSeries,\n  fetchTvSeries,\n  fetchTopRatedMovies,\n  fetchUpcomingMovies,\n  removeFromWishlist,\n} from \"../redux/actions\";\n\nconst _SerieScreen = (props) => {\n  const navigation = useNavigation();\n  const {\n    movieReducer,\n    fetchOnAirSeries,\n    fetchSeries,\n    fetchTvSeries,\n    addToWishList,\n    removeFromWishlist,\n    fetchTopRatedMovies,\n    fetchUpcomingMovies,\n  } = props;\n\n  const { onAirSeries, series, tvSeries, wishlist, topMovies, upcomingMovies } = movieReducer;\n\n  const [currentMovie, setCurrentMovie] = useState(undefined);\n  const [listTopMovie, setListTopMovie] = useState([]);\n  const [listUpcomingMovie, setListUpcomingMovie] = useState();\n  const [listSerie, setListSerie] = useState([]);\n  const [listTvSerie, setListTvSerie] = useState([]);\n  const [listAirSerie, setlistAirSerie] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [queryResult, setQueryResult] = useState([]);\n  const [iconName, setIconName] = useState(\"magnify\")\n  const [isAnimating, setIsAnimating] = useState(false)\n  const [fadeAnim, setFadeAnim] = useState(new Animated.Value(24))\n  \n  const  deviceWidth = Dimensions.get(\"window\").width;\n\n\n  useEffect(() => {\n    fetchSeries();\n    setListSerie(series);\n  }, [series]);\n\n  useEffect(() => {\n    fetchOnAirSeries();\n    setlistAirSerie(onAirSeries);\n  }, [onAirSeries]);\n\n  useEffect(() => {\n    fetchTvSeries();\n    setListTvSerie(tvSeries);\n  }, [tvSeries]);\n  \n\n  const searchData = (query) => {\n    axios\n      .get(\n        \"https://api.themoviedb.org/3/search/tv?api_key=afd804ef50f1e6b1ad6f29209e9395e6&language=fr-FR&query=\" +\n          query +\n          \"&page=1&include_adult=false\"\n      )\n      .then((response) => {\n        setQueryResult(response.data.results);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const resetQuery = () => {\n    setQuery(\"\")\n  }\n\n  const goSearchResults = () => {\n    navigation.navigate(\"ResultsQuerySerie\", { queryResult: queryResult, resetQuery:resetQuery });\n    \n  };\n\n  const onTapAddToWishlist = (serie) => {\n    addToWishList(serie);\n  };\n\n  const onTapRemoveFromWishlist = (serie) => {\n    removeFromWishlist(serie);s\n  };\n\n  const isExist = (serie) => {\n    if (wishlist.filter((item) => item._id === serie._id).length > 0) {\n      return true;\n    }\n\n    return false;\n  };\n\n\n  \n\n  return (\n    <SafeAreaView\n      style={styles.container}\n      showHorizontalScrollIndicator={false}\n    >\n      <View style={styles.header}>\n       \n        <View style={{ flexDirection: \"row\"}}>\n          <TextInput\n           style={{\n            backgroundColor: \"white\",\n            width: 200,\n            borderRadius: 10,\n            marginTop: 8\n          }}\n            data={query}\n            placeholder=\"Rechercher une série\"\n            onChangeText={(query) => {\n              searchData(query);\n            }}\n          />\n         \n        <TouchableWithoutFeedback\n          style={{\n            width: 24,\n            height: 40,\n            justifyContent: \"flex-end\",\n            marginLeft: 15\n          }}\n          onPress={goSearchResults}\n        >\n          <MaterialCommunityIcons\n            name=\"magnify\"\n            color={\"#998CF8\"}\n            size={30}\n          />\n        </TouchableWithoutFeedback>\n    \n          \n        </View>\n      </View>\n\n      <ScrollView>\n        <View\n          style={{\n            flexDirection: \"column\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            paddingHorizontal: 20,\n            marginVertical: 20,\n          }}\n        >\n          <Text style={{marginBottom: 20, fontSize: 32, fontWeight: \"bold\", color:\"#998CF8\"}}>\n            Series\n          </Text>\n          <Image\n            style={styles.cover_image}\n            source={{\n              uri:\n                \"https://image.tmdb.org/t/p/w500/tsRy63Mu5cu8etL1X7ZLyf7UP1M.jpg\",\n            }}\n          />\n        </View>\n\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            paddingHorizontal: 20,\n            marginVertical: 20,\n          }}\n        >\n          <Text style={styles.section}>Popular series</Text>\n          <View\n            style={{\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n              alignItems: \"center\",\n            }}\n          >\n            <MaterialCommunityIcons name=\"chevron-right\" color={\"#998CF8\"} size={32} />\n          </View>\n        </View>\n        <ScrollView horizontal={true}>\n          <View style={{ flexDirection: \"row\", flex: 1, paddingLeft: 20 }}>\n            {listSerie.map((serie, index) => {\n              return index < 15 ? (\n                <SerieItems\n                  key={serie.id}\n                  serie={serie}\n                  title={serie.title}\n                  image={serie.poster_path}\n                />\n              ) : (\n                <View key={serie.id} />\n              );\n            })}\n          </View>\n        </ScrollView>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            paddingHorizontal: 20,\n            marginVertical: 20,\n          }}\n        >\n          <Text style={styles.section}>On display </Text>\n          <View\n            style={{\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n              alignItems: \"center\",\n            }}\n          >\n            <MaterialCommunityIcons name=\"chevron-right\" color={\"#998CF8\"} size={32} />\n          </View>\n        </View>\n        <ScrollView horizontal={true}>\n          <View style={{ flexDirection: \"row\", flex: 1, paddingLeft: 20 }}>\n            {listAirSerie.map((serie, index) => {\n              return index < 20 ? (\n                <SerieItems\n                  key={serie.id}\n                  serie={serie}\n                  title={serie.title}\n                  image={serie.poster_path}\n                />\n              ) : (\n                <View key={serie.id} />\n              );\n            })}\n          </View>\n        </ScrollView>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            paddingHorizontal: 20,\n            marginVertical: 20,\n          }}\n        >\n          <Text style={styles.section}>Top rated </Text>\n          <View\n            style={{\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n              alignItems: \"center\",\n            }}\n          >\n            <MaterialCommunityIcons name=\"chevron-right\" color={\"#998CF8\"} size={32} />\n          </View>\n        </View>\n        <ScrollView horizontal={true}>\n          <View style={{ flexDirection: \"row\", flex: 1, paddingLeft: 20 }}>\n            {listTvSerie.map((serie, index) => {\n              return index < 20 ? (\n                <SerieItems\n                  key={serie.id}\n                  serie={serie}\n                  title={serie.title}\n                  image={serie.poster_path}\n                />\n              ) : (\n                <View key={serie.id} />\n              );\n            })}\n          </View>\n        </ScrollView>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  movieReducer: state.movieReducer,\n});\n\nconst SerieScreen = connect(mapStateToProps, {\n  fetchOnAirSeries,\n  addToWishList,\n  removeFromWishlist,\n  fetchTopRatedMovies,\n  fetchUpcomingMovies,\n  fetchSeries,\n  fetchTvSeries\n})(_SerieScreen);\n\nexport default SerieScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: Constants.statusBarHeight,\n    paddingVertical: 20,\n    backgroundColor: \"#111112\"\n  },\n  header: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    paddingHorizontal: 20,\n    marginBottom: 20,\n  \n  },\n  title: {\n    fontWeight: \"bold\",\n    fontSize: 24,\n    flex: 1,\n  },\n  posterView: {\n    display: \"flex\",\n    width: Dimensions.get(\"screen\").width,\n    flex: 7,\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n  },\n  listView: {\n    width: Dimensions.get(\"screen\").width,\n    flex: 5,\n    padding: 10,\n  },\n  poster: {\n    display: \"flex\",\n    width: Dimensions.get(\"screen\").width,\n    height: \"100%\",\n    justifyContent: \"flex-end\",\n    flexDirection: \"column\",\n  },\n  movieCard: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: Dimensions.get(\"screen\").width / 2.5 - 10,\n    backgroundColor: \"#FFF\",\n    borderRadius: 20,\n    height: \"80%\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginLeft: 10,\n  },\n  cover_image: {\n    width: \"100%\",\n    height: 256,\n    borderRadius: 10,\n    marginBottom: 10,\n  },\n  input: {\n    height: 40,\n    width: 155,\n    margin: 12,\n    borderWidth: 1,\n  },\n  autocompleteContainer: {\n    flex: 1,\n    left: 0,\n    position: \"absolute\",\n    right: 0,\n    top: 0,\n    zIndex: 1,\n  },\n  section: {\n    color: \"#fff\",\n    fontSize: 32,\n    fontWeight: \"bold\",\n\n  }\n});\n"]},"metadata":{},"sourceType":"module"}